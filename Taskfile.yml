version: "3"

tasks:
  dev:
    env:
      S3_ACCESS_KEY: admin
      S3_SECRET_KEY: minio123
      S3_SERVICE_URL: http://localhost:9000
      S3_BUCKET_NAME: ical2s3grpc
      S3_REGION: us-east-1
      S3_USE_HTTPS: false
      S3_FORCE_PATH_STYLE: true
    cmds:
      - docker compose up -d --wait s3
      - docker compose up s3-init
      - dotnet run

  ci:
    cmds:
      - dotnet restore
      - dotnet build --no-restore
      - dotnet format ical2s3grpc.csproj --verbosity diagnostic
      - dotnet test --no-build --verbosity normal 

  test:
    desc: "Start application with docker compose and test with grpcurl and mc"
    env:
      S3_ACCESS_KEY: admin
      S3_SECRET_KEY: minio123
      S3_SERVICE_URL: http://localhost:9000
      S3_BUCKET_NAME: ical2s3grpc
      S3_REGION: us-east-1
      S3_USE_HTTPS: false
      S3_FORCE_PATH_STYLE: true
    cmds:
      - echo "Starting services..."
      - docker compose up --build -d --wait app
      - docker compose up -d --wait app-healthcheck
      - echo "Services started. Testing gRPC service..."
      - echo "Available gRPC methods:"
      - grpcurl -plaintext localhost:8080 list
      - echo "Testing ICalendarService:"
      - grpcurl -plaintext -d '{"calendar_id":"test-calendar","events":[{"uid":"event1","dtstamp":"20250129T120000Z","dtstart":"20250130T100000Z","summary":"Test Event"}],"prodid":"-//Test//Test Calendar//EN","version":"2.0"}' localhost:8080 ical2s3.ICalendarService/SaveEvents
      - echo "Verifying test-calendar.ics exists..."
      - |
        mc ls local/ical2s3grpc | \
        grep -q "test-calendar.ics" || \
        (echo "ERROR: test-calendar.ics not found in S3 bucket!" && exit 1)
      - echo "Test completed. Use 'docker compose down' to stop services."
